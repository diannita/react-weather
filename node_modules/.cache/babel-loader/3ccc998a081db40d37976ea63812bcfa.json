{"ast":null,"code":"import _classCallCheck from \"/Users/happycat/Documents/GitHub/react-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/happycat/Documents/GitHub/react-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/happycat/Documents/GitHub/react-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/happycat/Documents/GitHub/react-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/happycat/Documents/GitHub/react-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/happycat/Documents/GitHub/react-weather/src/Forecast.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Api from \"./Api\";\nimport DateUtil from \"./DateUtil\";\nimport \"./Forecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nvar Forecast = /*#__PURE__*/function (_Component) {\n  _inherits(Forecast, _Component);\n  function Forecast() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Forecast);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Forecast)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      city: _this.props.city\n    };\n    _this.refresh = function () {\n      var url = \"\".concat(Api.url, \"/data/2.5/forecast?appid=\").concat(Api.key, \"&units=metric&q=\").concat(_this.state.city);\n      axios.get(url).then(function (response) {\n        var forecast = response.data.list;\n        // The API returns the forecast every 3 hour, so we are exrtacting\n        // the weather for every 24 hours which 8 times 3 hour cycles\n        var dailyForecast = [7, 15, 23, 31, 39].map(function (index) {\n          return {\n            description: forecast[index].weather[0].main,\n            icon: forecast[index].weather[0].icon,\n            precipitation: Math.round(forecast[index].main.humidity) + \"%\",\n            temperature: Math.round(forecast[index].main.temp),\n            day: new DateUtil(new Date(forecast[index].dt * 1000)).day(true),\n            wind: Math.round(forecast[index].wind.speed) + \"km/h\"\n          };\n        });\n        _this.setState({\n          forecast: dailyForecast\n        });\n      });\n    };\n    return _this;\n  }\n  _createClass(Forecast, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.refresh();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      this.setState({\n        city: nextProps.city\n      }, function () {\n        _this2.refresh();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (this.state.forecast) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }\n        }, this.state.forecast.map(function (weather, index) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-sm-2\",\n            key: index,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"forecast-day\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }\n          }, weather.day), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"forecast-icon\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(WeatherIcon, {\n            iconName: weather.icon,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"forecast-temperature\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }\n          }, weather.temperature, \"\\xB0\"));\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n  return Forecast;\n}(Component);\nexport { Forecast as default };","map":{"version":3,"names":["React","Component","axios","Api","DateUtil","WeatherIcon","Forecast","state","city","props","refresh","url","key","get","then","response","forecast","data","list","dailyForecast","map","index","description","weather","main","icon","precipitation","Math","round","humidity","temperature","temp","day","Date","dt","wind","speed","setState","nextProps"],"sources":["/Users/happycat/Documents/GitHub/react-weather/src/Forecast.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Api from \"./Api\";\nimport DateUtil from \"./DateUtil\";\nimport \"./Forecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nexport default class Forecast extends Component {\n  state = {\n    city: this.props.city\n  };\n  componentWillMount() {\n    this.refresh();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ city: nextProps.city }, () => {\n      this.refresh();\n    });\n  }\n\n  refresh = () => {\n    let url = `${Api.url}/data/2.5/forecast?appid=${Api.key}&units=metric&q=${\n      this.state.city\n    }`;\n\n    axios.get(url).then(response => {\n      let forecast = response.data.list;\n      // The API returns the forecast every 3 hour, so we are exrtacting\n      // the weather for every 24 hours which 8 times 3 hour cycles\n      let dailyForecast = [7, 15, 23, 31, 39].map(index => {\n        return {\n          description: forecast[index].weather[0].main,\n          icon: forecast[index].weather[0].icon,\n          precipitation: Math.round(forecast[index].main.humidity) + \"%\",\n          temperature: Math.round(forecast[index].main.temp),\n          day: new DateUtil(new Date(forecast[index].dt * 1000)).day(true),\n          wind: Math.round(forecast[index].wind.speed) + \"km/h\"\n        };\n      });\n      this.setState({ forecast: dailyForecast });\n    });\n  };\n  render() {\n    if (this.state.forecast) {\n      return (\n        <div className=\"row\">\n          {this.state.forecast.map((weather, index) => {\n            return (\n              <div className=\"col-sm-2\" key={index}>\n                <div className=\"forecast-day\">{weather.day}</div>\n                <div className=\"forecast-icon\">\n                  <WeatherIcon iconName={weather.icon} />\n                </div>\n                <div className=\"forecast-temperature\">\n                  {weather.temperature}Â°\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}